# -*- coding: utf-8 -*-
"""#3, 4, 6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15nMDGfDKvZRHHu9PyLf2bRwIC-vG7R0Y

## 필요 열 생성 
- 행정동, 법정동 열 생성
- 사용승인년도 (준공년도)
- 부과년도
- 부과월 

## 3,4,6 데이터 생성 
- #3 Table. 대전광역시 공동주택 준공년도 분포 
- #4 Table. 대전광역시 공동주택 세대수 분포
- #6 Graph. 대전광역시 공동주택 평균 에너지 사용금액 비중
"""

import pandas as pd

df_basic = pd.read_excel("아파트_RawData.xlsx", sheet_name = '기본정보')
df_fac = pd.read_excel("아파트_RawData.xlsx", sheet_name = '관리시설정보')
df_fee = pd.read_excel("아파트_RawData.xlsx", sheet_name = '관리비정보')
df_eng = pd.read_excel("아파트_RawData.xlsx", sheet_name = '에너지사용통계')

df_basic.head(3)

df_fac.head(3)

df_fee.head(3)

df_eng.head(3)

"""### 필요 열 생성 
- 행정동, 법정동 열 생성
"""

대전_행정구 = ['유성구','대덕구','동구','서구','중구']

# 행정구 추출 
df_basic['법정동주소'][0][6:9].strip()

# 법정동 추출 
df_basic['법정동주소'][45][9:13].strip()

df_basic['행정구'] = ''

df_basic['법정동'] = ''

df_basic.columns

df_basic.loc[1, '법정동주소'][9:13].strip()

# 문자열 포매팅 : https://wikidocs.net/13
for i in range(len(df_basic)):
    df_basic.loc[i, '행정구'] = df_basic.loc[i, '법정동주소'][6:9].strip()
    df_basic.loc[i, '법정동'] = df_basic.loc[i, '법정동주소'][9:13].strip()

df_basic.to_csv("test.csv", index = False)

df_basic_2 = pd.read_csv("test.csv", encoding = 'cp949')

# 행정구 법정동 추가 완료 
df_basic_2.head(3)

"""### #6 Graph. 대전광역시 공동주택 평균 에너지 사용금액 비중 
- 기준 : 2020년 
- 난방, 급탕, 전기 에너지 평균 사용금액 
"""

df_eng.columns

df_eng['부과년도'] = ''

str(df_eng.loc[1, '부과년월'])[:4]

for i in range(len(df_eng)):
    df_eng['부과년도'][i] = str(df_eng.loc[i, '부과년월'])[:4]
    print(i)

df_fee_per_2020 = df_eng[df_eng['부과년도'] == '2020']

df_fee_per_2020_ver2 = df_eng[(df_eng.loc[:,'난방_에너지사용금액'] != 0) 
                   & (df_eng.loc[:, '급탕_에너지사용금액'] != 0)
                   & (df_eng.loc[:, '전기_에너지사용금액'] != 0)]

print("급탕비 : " + str(df_fee_per_2020_ver2['급탕_에너지사용금액'].mean()))
print("난방비 : " + str(df_fee_per_2020_ver2['난방_에너지사용금액'].mean()))
print("전기료 : " + str(df_fee_per_2020_ver2['전기_에너지사용금액'].mean()))

"""### 필요 열 생성
- 사용승인년도 (준공년도)
- 부과년도
- 부과월

**사용승인년도**
"""

df_basic_2['사용승인년도'] = ''

for i in range(len(df_basic_2)):
    df_basic_2.loc[i, '사용승인년도'] = str(df_basic_2.loc[i, '사용승인일'])[:4]

df_basic_2.to_csv("단지기본정보.csv", index = False)

"""**부과년도 / 부과월**"""

str(df_fee.loc[1, '부과년월'])[:4].strip()

str(int(df_fee.loc[1,'부과년월']))[4:].strip()

df_fee['부과년도'] = ''
df_fee['부과월'] = ''

# 예외처리 : https://wikidocs.net/30
for i in range(len(df_fee)):
    try:
        df_fee.loc[i,'부과년도'] = str(df_fee.loc[i, '부과년월'])[:4].strip()
        df_fee.loc[i,'부과월'] = str(int(df_fee.loc[i,'부과년월']))[4:].strip()
    except:
        print(i)
        pass

df_fee.head(3)

df_fee.to_csv("관리비정보.csv", index=False)

"""### #3 대전광역시 공동주택 준공년도 분포 
- #3 Table. 대전광역시 공동주택 준공년도 분포 
"""

bins = [1970, 1980, 1990, 2000, 2010, 2022]

세대수분포 = pd.cut(df_basic_2['사용승인년도'], bins, right = False)

세대수분포[세대수분포.isnull() ==  True]

세대수분포 = pd.value_counts(세대수분포).sort_index()

세대수분포_sum = 세대수분포.sum()

pd.DataFrame({'도수':세대수분포})

"""### #4 대전시 공동주택 세대수 분포
- #4 Table. 대전광역시 공동주택 세대수 분포 
"""

df_basic_2

# 히스토그램 https://truman.tistory.com/104
df_basic_2['세대수'].hist()

# 분할 구간 만들기 (150 ~ 300, 300 ~ 500, 500 ~ 700, 700 ~ 900, 900)
bins = [150, 300, 500, 700, 900, 1100, 1300, 40000]

세대수분포 = pd.cut(df_basic_2['세대수'], bins, right = False)

세대수분포

세대수분포.isnull().sum()

세대수분포 = pd.value_counts(세대수분포).sort_index()

세대수분포_sum = 세대수분포.sum()

pd.DataFrame({'도수':세대수분포})

"""### 필요 열 생성 
- 준공년도 범위
- 세대수 범위 
"""

df_basic_2['사용승인년도_범위'] = ''
df_basic_2['세대수_범위'] = ''

df_basic_2.index

type(df_basic_2.loc[0, '사용승인년도'])

for i in range(len(df_basic_2)):
    if df_basic_2.loc[i, '세대수'] < 300:
        df_basic_2.loc[i, '세대수_범위'] = 300
    elif df_basic_2.loc[i, '세대수'] < 500:
        df_basic_2.loc[i, '세대수_범위'] = 500
    elif df_basic_2.loc[i, '세대수'] < 700:
        df_basic_2.loc[i, '세대수_범위'] = 700
    elif df_basic_2.loc[i, '세대수'] < 900:
        df_basic_2.loc[i, '세대수_범위'] = 900
    elif df_basic_2.loc[i, '세대수'] < 1100:
        df_basic_2.loc[i, '세대수_범위'] = 1100
    elif df_basic_2.loc[i, '세대수'] < 1300:
        df_basic_2.loc[i, '세대수_범위'] = 1300
    else:
        df_basic_2.loc[i, '세대수_범위'] = 4000

for i in range(len(df_basic_2)):
    if df_basic_2.loc[i, '사용승인년도'] < 1980:
        df_basic_2.loc[i, '사용승인년도_범위'] = 1980
    elif df_basic_2.loc[i, '사용승인년도'] < 1990:
        df_basic_2.loc[i, '사용승인년도_범위'] = 1990
    elif df_basic_2.loc[i, '사용승인년도'] < 2000:
        df_basic_2.loc[i, '사용승인년도_범위'] = 2000
    elif df_basic_2.loc[i, '사용승인년도'] < 2010:
        df_basic_2.loc[i, '사용승인년도_범위'] = 2010
    else:
        df_basic_2.loc[i, '사용승인년도_범위'] = 2020

df_basic_2['사용승인년도_범위'].unique()

df_basic_2['세대수_범위'].head()

df_basic_2.to_csv("단지기본정보_ver2.csv", index = False, encoding='utf-8')